#!/bin/bash
# Script for taking a screenshot from a selected area and pushing it straight
# into dropbox (with an unpredictable naming scheme).
#
# Requires:
# * scrot
# * xclip

### CHANGE THESE VARIABLES:

# Where is your Dropbox Public directory?
DROPBOX_DIR=~/Dropbox/Public

# Where do you want to save the screenshots?
SCREENSHOT_DIR=$DROPBOX_DIR/screenshots

# What's your dropbox user id? (Get it by sharing a file and looking in the URL)
USER_ID=1156750

### (End)

function screenshot() {
    echo "Taking screenshot: $(basename $1)"
    if which -s scrot; then
        scrot -s $1 || return -1
    elif which -s screencapture; then
        screencapture -i $1 || return -1
    else
    	echo "No screenshot utility found. Install scrot."
	return -1
    fi
}

function clipboard() {
    echo "Copying URL to clipboard: $1"
    if which -s xclip; then
        echo $1 | xclip
    elif which -s pbcopy; then
        echo $1 | pbcopy
    else
        echo "No clipboard utility found. Install xclip."
        return -1
    fi
}

# Append first argument to SCREENSHOT_DIR for tagging
if [ "$1" ]; then
   SCREENSHOT_DIR=$SCREENSHOT_DIR/$1
fi

if [ ! -d $SCREENSHOT_DIR ]; then
    mkdir -p $SCREENSHOT_DIR
fi

name="screenshot_$(date '+%Y-%m-%d')"

# Make it hard to guess
random_string=$(head -c512 /dev/urandom | md5 -q | head -c4)

# Get the appropriate count
count=$(find $SCREENSHOT_DIR -name "$name*.png" | wc -l | sed "s/ *//")

# Compose full filename
filename="${name}_${count}_${random_string}.png"

screenshot "$SCREENSHOT_DIR/$filename" || exit -1

# Compose relative path for URL
dropbox_relpath=${SCREENSHOT_DIR##"$DROPBOX_DIR/"}

# Copy to clipboard
clipboard "http://dl.dropbox.com/u/$USER_ID/$dropbox_relpath/$filename"
